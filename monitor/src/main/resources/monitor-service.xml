<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd">
	
	<mvc:annotation-driven />	
	<context:component-scan base-package="org.cmg" />
	
	<!-- MapDB beans.  monitor props passed in as JVM -D arg -->
	<context:property-placeholder location="file:${monitor.properties.path}" />
	<bean id="dbFile" class="java.io.File">
		<constructor-arg value="${org.cmg.data.filepath}"></constructor-arg>
	</bean>

	<bean id="dbFactory" class="org.mapdb.DBMaker"
		factory-method="newFileDB">
		<constructor-arg ref="dbFile" />
	</bean>
	
	<!-- not directly used by any application code, just makes factory add DB close function on shutdown -->
	<bean id="shutdownHook" 
		factory-bean="dbFactory" 
		factory-method="closeOnJvmShutdown">
	</bean>
	
	<bean id="database"
		factory-bean="dbFactory" 
		factory-method="make">
	</bean>
	
	<!-- PIR Sensor Bean -->
	<bean id="pirSensor" class="org.cmg.sensor.PassiveIRSensor">
		<constructor-arg><util:constant static-field="${org.cmg.sensor.pin}"/></constructor-arg>
		<property name="ledPin"><util:constant static-field="${org.cmg.led.pin}"/></property>
		<property name="database" ref="database"></property>
	</bean>
	
	<!-- Email props -->
	<!-- creates a java.util.Properties instance with values loaded from the supplied location -->
	<util:properties id="systemProps" location="file:${monitor.properties.path}" />
	
	<!-- Sensor observers -->
	<bean id="emailNotifier" class="org.cmg.observer.EmailNotifier">
		<property name="props" ref="systemProps" />
		<property name="database" ref="database"></property>
	</bean>
	
	<bean id="monitorDataUpdater" class="org.cmg.observer.MonitorDataUpdater">
		<property name="database" ref="database"></property>
	</bean>
	
	<bean id="photoTaker" class="org.cmg.observer.PhotoTaker">
		<property name="database" ref="database"></property>
	</bean>
		
	<bean id="audioPlayer" class="org.cmg.observer.AudioPlayer">
	</bean>
	
	<bean id="relayActivator" class="org.cmg.observer.RelayActivator">
		<property name="relayPin"><util:constant static-field="${org.cmg.relay.pin}"/></property>
	</bean>

	<!-- NOTE that order is important, observers are updated in reverse order listed. -->
	<util:list id="observerList" value-type="java.util.Observer">
		<ref bean="audioPlayer"/>
		<ref bean="emailNotifier"/>
		<ref bean="monitorDataUpdater"/>
		<ref bean="photoTaker"/>
		<ref bean="relayActivator"/>  <!-- relay closed to power up light before attempting a photo -->
	</util:list>
	
	<!-- The monitor service is @Injected by MonitorController -->
	<bean id="monitorService" class="org.cmg.service.MonitorServiceImpl">
		<property name="database" ref="database"></property>
		<property name="pirSensor" ref="pirSensor"></property>
		<property name="observerList" ref="observerList"></property>
	</bean>
</beans>